// Generated by CoffeeScript 1.3.3
(function() {
  var basepath, iplSchedule,
    __hasProp = {}.hasOwnProperty;

  basepath = "";

  if (typeof local !== "undefined" && local !== null) {
    basepath = "http://esports.ign.com/addons/ipl-widgets/schedule/";
  }

  iplSchedule = {
    init: function(config) {
      var fetchingFranchises, fetchingSchedule,
        _this = this;
      if (config == null) {
        config = {
          franchise: "all"
        };
      }
      fetchingSchedule = this.fetchUrl("schedule");
      fetchingFranchises = this.fetchUrl("franchises");
      fetchingSchedule.fail(function(jqXHR, textStatus, errorThrown) {
        return console.log(jqXHR, textStatus, errorThrown);
      });
      fetchingFranchises.fail(function(jqXHR, textStatus, errorThrown) {
        return console.log(jqXHR, textStatus, errorThrown);
      });
      /*
          fetchingFranchises.done (data)->
            window.franchiseList = data if window.franchiseList?
      */

      return $.when(fetchingSchedule, fetchingFranchises).done(function(scheduleData, franchiseData) {
        var allSchedules, date, games, schedule;
        schedule = _this.buildSchedule(scheduleData[0], franchiseData[0], config.franchise);
        games = _this.buildGames(scheduleData[0], franchiseData[0], config.franchise);
        date = _this.buildDates();
        allSchedules = schedule.join("");
        if (schedule.length) {
          $("#schedule").html("<section class='guide'>" + games + date + allSchedules + "</section>").addClass("games-" + schedule.length);
        }
        return _this.balanceGuide();
      });
    },
    getBroadcastDate: function(broadcast) {
      var broadcastDate;
      return broadcastDate = {
        starts_at: new Date(broadcast.starts_at),
        ends_at: new Date(broadcast.ends_at)
      };
    },
    fetchUrl: function(type) {
      return $.ajax({
        url: "http://esports.ign.com/" + type + ".json",
        dataType: "jsonp",
        cache: true,
        jsonpCallback: "getCached" + type
      });
    },
    buildGames: function(scheduleData, franchiseData, currentFranchiseSlug) {
      var franchise, game, gameList, value, _i, _len;
      if (currentFranchiseSlug == null) {
        currentFranchiseSlug = all;
      }
      gameList = "<ul class='games'>";
      gameList += "<li class='times'><p>Times for your time zone</p><a href='/ipl/all/schedule'>Full Schedule</a></li>";
      for (_i = 0, _len = franchiseData.length; _i < _len; _i++) {
        franchise = franchiseData[_i];
        for (game in scheduleData) {
          if (!__hasProp.call(scheduleData, game)) continue;
          value = scheduleData[game];
          if (game === franchise.slug && (currentFranchiseSlug === "all" || currentFranchiseSlug === game)) {
            gameList += "<li class='gameHeader " + franchise.slug + "'><h3><a href='/ipl/" + franchise.slug + "'>" + franchise.name + "</a></h3></li>";
          }
        }
      }
      return gameList += "</ul>";
    },
    buildDates: function() {
      var dateList, day, dayText, i, monthDateText, monthText;
      dateList = "<ul class='dates'>";
      i = 0;
      while (i < 7) {
        day = moment().local().add("days", i);
        dayText = day.format("dddd");
        monthText = day.format("MMM");
        monthDateText = day.format("Do");
        dateList += "<li class='" + dayText.toLowerCase() + " clearfix " + (i === 0 ? 'today' : '') + "'><time><span>" + dayText + "</span><br />" + monthText + ", " + monthDateText + "</time></li>";
        i++;
      }
      return dateList += "</ul>";
    },
    buildSchedule: function(scheduleData, franchiseData, currentFranchiseSlug) {
      var broadcast, broadcastDate, broadcastList, broadcasts, day, franchise, game, i, index, _i, _j, _len, _len1, _ref;
      if (currentFranchiseSlug == null) {
        currentFranchiseSlug = all;
      }
      broadcastList = [];
      index = 0;
      for (_i = 0, _len = franchiseData.length; _i < _len; _i++) {
        franchise = franchiseData[_i];
        for (game in scheduleData) {
          if (!__hasProp.call(scheduleData, game)) continue;
          broadcasts = scheduleData[game];
          if (game === franchise.slug && (currentFranchiseSlug === "all" || currentFranchiseSlug === game)) {
            i = 0;
            broadcastList[index] = "<ul class='" + franchise.slug + " schedule'>";
            while (i < 7) {
              day = moment().local().eod().add("days", i);
              if (i === 0) {
                broadcastList[index] += "<li class='today " + day.format('dddd').toLowerCase() + "'><ul>";
              } else {
                broadcastList[index] += "<li class='" + day.format('dddd').toLowerCase() + "'><ul>";
              }
              for (_j = 0, _len1 = broadcasts.length; _j < _len1; _j++) {
                broadcast = broadcasts[_j];
                broadcastDate = iplSchedule.getBroadcastDate(broadcast);
                if (broadcastDate.starts_at.getDate() === day.date() && broadcastDate.ends_at > moment()) {
                  broadcastList[index] += "<li class='clearfix'><p><time>" + moment(broadcastDate.starts_at).format("h:mma") + "</time> - <span class='title'>" + broadcast.title + "</span>";
                  if (broadcast.subtitle_1 || broadcast.subtitle_2) {
                    broadcastList[index] += "<br />";
                    if (broadcast.subtitle_1) {
                      broadcastList[index] += "<span>" + broadcast.subtitle_1 + "</span> ";
                    }
                    if (broadcast.subtitle_2) {
                      broadcastList[index] += "<span>" + broadcast.subtitle_2 + "</span> ";
                    }
                  }
                  if (broadcast.metadata.rebroadcast) {
                    broadcastList[index] += "<br /><span class='old'>Rebroadcast</span>";
                  } else {
                    broadcastList[index] += "<br /><span class='new'>All new</span>";
                  }
                  if ((broadcastDate.starts_at < (_ref = moment()) && _ref < broadcastDate.ends_at)) {
                    broadcastList[index] += "<br /><a class='now' href= '/ipl/" + franchise.slug + "'>Watch now</a>";
                  }
                  broadcastList[index] += "</p></li>";
                }
              }
              broadcastList[index] += "</ul></li>";
              i++;
            }
            broadcastList[index] += "</li></ul>";
            index++;
          }
        }
      }
      return broadcastList;
    },
    balanceGuide: function() {
      var days, i, _results;
      days = [];
      i = 0;
      _results = [];
      while (i < moment.weekdays.length) {
        days.push($(".guide li." + moment.weekdays[i].toLowerCase()));
        this.equalizeDays(days);
        _results.push(i++);
      }
      return _results;
    },
    equalizeDays: function(days) {
      var i, maxHeight, _results;
      i = 0;
      _results = [];
      while (i < days.length) {
        maxHeight = 0;
        days[i].each(function() {
          var itemHeight;
          itemHeight = $(this).outerHeight();
          if (maxHeight < itemHeight) {
            return maxHeight = itemHeight;
          }
        });
        days[i].each(function() {
          return $(this).height(maxHeight);
        });
        _results.push(i++);
      }
      return _results;
    }
  };

  if (typeof scheduleConfig !== "undefined" && scheduleConfig !== null) {
    iplSchedule.init(scheduleConfig);
  } else {
    iplSchedule.init();
  }

}).call(this);
