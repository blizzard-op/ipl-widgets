// Generated by CoffeeScript 1.3.3
(function() {
  var basepath, iplSchedule,
    __hasProp = {}.hasOwnProperty;

  basepath = "";

  if (typeof local !== "undefined" && local !== null) {
    basepath = "http://esports.ign.com/addons/ipl-widgets/schedule/";
  }

  iplSchedule = {
    init: function(config) {
      var fetchingFranchises, fetchingSchedule,
        _this = this;
      this.loadStyleSheet();
      fetchingSchedule = this.fetchUrl("schedule");
      fetchingFranchises = this.fetchUrl("franchises");
      fetchingSchedule.fail(function(a, b, c) {
        return console.log(a, b, c);
      });
      fetchingFranchises.fail(function(a, b, c) {
        return console.log(a, b, c);
      });
      return $.when(fetchingSchedule, fetchingFranchises).done(function(scheduleData, franchiseData) {
        var date, games, schedule;
        schedule = _this.buildSchedule(scheduleData[0], franchiseData[0]);
        date = _this.buildDates();
        games = _this.buildGames(scheduleData[0], franchiseData[0]);
        return $("#schedule").html(date + games);
      });
    },
    getGameTitle: function(matchObj) {
      var title;
      return title = match_Obj.title;
    },
    getMatchDate: function(matchObj) {
      var matchEnd, matchStart;
      matchStart = matchObj.starts_at;
      return matchEnd = matchObj.ends_at;
    },
    fetchUrl: function(type) {
      return $.ajax({
        url: "http://esports.ign.com/" + type + ".json",
        dataType: "jsonp",
        cache: true,
        jsonpCallback: "getCached" + type
      });
    },
    buildGames: function(scheduleData, franchiseData) {
      var calid, franchise, game, gameList, value, _i, _len;
      gameList = "<ul class='games'>";
      gameList += "<li class='times'><p>Times for your time zone</p></li>";
      for (_i = 0, _len = franchiseData.length; _i < _len; _i++) {
        franchise = franchiseData[_i];
        for (game in scheduleData) {
          if (!__hasProp.call(scheduleData, game)) continue;
          value = scheduleData[game];
          if (game === franchise.slug) {
            if (game === "starcraft-2") {
              calid = "1u5m1559a5rlih3tr8jqp4kgac";
            }
            if (game === "league-of-legends") {
              calid = "igpia9kc2fst1ijkde1avplkq0";
            }
            gameList += "<li class='gameHeader " + franchise.slug + "'><h3><a href='/ipl/" + franchise.slug + "'>" + franchise.name + "</a></h3><a href='https://www.google.com/calendar/embed?src=" + calid + "%40group.calendar.google.com' class='outbound-link fullCal'>Full Calendar</a></li>";
          }
        }
      }
      return gameList += "</ul>";
    },
    buildDates: function() {
      var dateList, day, dayText, i, monthDateText, monthText, today;
      dateList = "<ul>";
      i = 0;
      while (i < 7) {
        day = moment().local().add("days", i);
        dayText = day.format("dddd");
        monthText = day.format("MMMM");
        monthDateText = day.format("Do");
        today = i === 0 ? "today" : "";
        dateList += "<li class='" + dayText.toLowerCase() + " clearfix " + today + "'><time><span>" + dayText + "</span><br />" + monthText + ", " + monthDateText + "</time></li>";
        i++;
      }
      return dateList += "</ul>";
    },
    buildSchedule: function(scheduleData, franchiseData) {
      var broadcastList, day, franchise, game, value, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = franchiseData.length; _i < _len; _i++) {
        franchise = franchiseData[_i];
        _results.push((function() {
          var _results1;
          _results1 = [];
          for (game in scheduleData) {
            if (!__hasProp.call(scheduleData, game)) continue;
            value = scheduleData[game];
            if (game === franchise.slug) {
              broadcastList = "<ul class='" + franchise.slug(+" schedule'>");
              while (i < 7) {
                day = moment().local().eod().add("days", i);
                broadcastList += "<li><ul>";
                broadcastList += day;
                broadcastList += "</ul></li>";
                i++;
              }
              _results1.push(broadcastList += "</li></ul>");
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    },
    loadStyleSheet: function() {
      var head, link;
      head = document.getElementsByTagName('head')[0];
      link = document.createElement('link');
      link.setAttribute('href', basepath + 'css/schedule.css');
      link.setAttribute('rel', 'stylesheet');
      return head.appendChild(link);
    }
  };

  if (typeof scheduleConfig !== "undefined" && scheduleConfig !== null) {
    iplSchedule.init(scheduleConfig);
  } else {
    iplSchedule.init();
  }

}).call(this);
